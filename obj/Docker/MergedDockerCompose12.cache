services:
  pgadmin:
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@admin.org
      PGADMIN_DEFAULT_PASSWORD: password
    image: dpage/pgadmin4
    networks:
      default: null
    ports:
    - mode: ingress
      target: 8080
      published: 8080
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: pgadmin
      target: /root/.pgadmin
      volume: {}
  postgresql_database:
    environment:
      POSTGRES_DB: UserManagement
      POSTGRES_PASSWORD: password
      POSTGRES_USER: admin
    image: postgres:latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5432
      published: 5432
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: postgresql-data
      target: /var/lib/postgresql/data
      volume: {}
  usermanagement_poc:
    build:
      context: C:\Users\eiman\Desktop\coding\cSharp\UserManagement_PoC
      dockerfile: UserManagement_PoC/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: UserManagement_PoC
      target: base
    container_name: UserManagement_PoC_1
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+:443;http://+:80
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: usermanagementpoc:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/bin/Debug/net5.0/UserManagement_PoC.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\eiman\Desktop\coding\cSharp\UserManagement_PoC\UserManagement_PoC
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\eiman\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\eiman\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\eiman\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\eiman\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\eiman\Desktop\coding\cSharp\UserManagement_PoC
      target: /src
      bind:
        create_host_path: true
networks:
  default:
    name: dockercompose13563102673897207132_default
volumes:
  pgadmin:
    name: dockercompose13563102673897207132_pgadmin
  postgresql-data:
    name: dockercompose13563102673897207132_postgresql-data